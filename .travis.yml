language: julia

notifications:
  email: false

os:
  - linux

julia:
  - 1.4
  - 1.5
  - 1.6

branches:
  only:
    - master
    - julia16
    - /^release-.*/
    - /^v[0-9]+\.[0-9]+\.[0-9]+$/ # version tags

codecov: true
coveralls: true

stages:
  - name: test
  - name: docs

script:
  - if [[ -a .git/shallow ]]; then git fetch --unshallow; fi
  - julia --project -e 'using UUIDs; write("Project.toml", replace(read("Project.toml", String), r"uuid = .*?\n" =>"uuid = \"$(uuid4())\"\n"));'
  - julia --project --check-bounds=yes -e 'import Pkg; Pkg.build(); Pkg.test(; coverage=true)'

jobs:
  include:
    - stage: Documentation
      julia: 1.6
      os: linux
      script:
        - julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd()));
                                               Pkg.instantiate(); Pkg.add("Documenter"); '
        - julia --project=docs/ docs/make.jl
      after_success: skip
    - stage: test
      os: linux
      julia: 1.6
      script:
        - julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd()));
                                               Pkg.instantiate()'
        - julia -e 'using Pkg; Pkg.test(coverage=true)'
      after_success: |
        julia -e 'using Pkg; Pkg.add("Coverage"); using Coverage; Codecov.submit(Codecov.process_folder())'
